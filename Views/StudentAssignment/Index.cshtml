@using MVC.Models.DTO
@model Tuple<List<StudentAssignmentDTO>, StudentAssignmentDTO>

<style>
    .main-form {
        min-width: 50%;
        max-width: 50%;
    }
</style>

<!-----------------------------------------------------------------MODAL CONTAINERS------------------------------------------------------------------->

<!-- Filter Modal Dialog box -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Assignments</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="filterStudentName" class="form-label">Student Name</label>
                    <input type="text" class="form-control" id="filterStudentName">
                </div>
                <div class="mb-3">
                    <label for="filterAssignmentTitle" class="form-label">Assignment Title</label>
                    <input type="text" class="form-control" id="filterAssignmentTitle">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this submission?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 9999;">
    <!-- Position it in the top right corner -->
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <!-- Toast -->
        <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-body text-white d-flex justify-content-between align-items-center" id="toastMessage">
                <!-- Message will be dynamically inserted here -->
                <span id="toastText"></span>
                <button type="button" class="btn-close btn-close-white ms-2" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
</div>
<!---------------------------------------------------------------MODAL CONTAINERS END------------------------------------------------------------------>

<!-- Form for Adding Submission -->
<div class="text-center">
    <h2>Add Submission</h2>

    <form id="addSubmissionForm">
        <section class="Add-Container d-flex justify-content-center">
            <div class="form-control main-form">

                <!-- Student DropDown List -->
                <div class="mt-3">
                    <label class="form-label">Student</label>
                    <select class="form-control" name="StudentId" required>
                        @foreach (var student in Model.Item2.Students)
                        {
                            <option value="@student.Id">@student.Name</option>
                        }
                    </select>
                </div>

                <!-- Assignment DropDown List -->
                <div class="mt-3">
                    <label class="form-label">Assignment</label>
                    <select class="form-control" name="AssignmentId" required>
                        @foreach (var assignment in Model.Item2.Assignments)
                        {
                            <option value="@assignment.Id">@assignment.Title</option>
                        }
                    </select>
                </div>

                <div class="mt-3">
                    <label class="form-label">Submission Date</label>
                    <input type="date" class="form-control" name="SubmissionDate" required />
                </div>

                <button type="button" class="btn btn-success w-50 mt-2" id="addSubmissionButton">Add</button>
            </div>
        </section>
    </form>
</div>

<h1 class="text-center mt-4">Student Assignments</h1>

<!--Filter Buttons-->
<div class="d-flex justify-content-center">
    <div class="mb-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#filterModal">
            Filter
        </button>
        <button type="button" class="btn btn-success" id="searchButton">
            Search
        </button>
    </div>
</div>

<table class="table" id="assignmentsTable">
    <thead>
        <tr>
            <th>Student Name</th>
            <th>Assignment Title</th>
            <th>Due Date</th>
            <th>Submission Date</th>
            <th>Options</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var submission in Model.Item1)
        {
            <tr id="Row_@submission.StudentId.ToString()_@submission.AssignmentId">
                <td>@submission.StudentName</td>
                <td>@submission.AssignmentTitle</td>
                <td>@submission.DueDate</td>
                <td>@submission.SubmissionDate</td>
                <td class="d-flex flex-column">
                    <button type="button" class="btn btn-danger mt-1 w-100 deleteSubmissionButton" data-student-id="@submission.StudentId.ToString()" data-assignment-id="@submission.AssignmentId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Show Toast Notification
    function showToast(message, success = true) {
        var toastElement = $('#notificationToast');
        var toastMessage = $('#toastText');

        // Set the message
        toastMessage.text(message);

        // Set the toast header color based on success or failure
        if (success) {
            toastElement.removeClass('bg-danger').addClass('bg-success');
        } else {
            toastElement.removeClass('bg-success').addClass('bg-danger');
        }

        // Show the toast
        var toast = new bootstrap.Toast(toastElement[0]);
        toast.show();
    }

    // Add Submission
    $('#addSubmissionButton').click(function () {
        var formData = $('#addSubmissionForm').serialize();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Add", "StudentAssignment")',
            data: formData,
            success: function (response) {
                showToast("Submission Added Successfully!", true);

                var newSubmission = response;

                // Add the new submission to the table
                $('table tbody').append(
                    `<tr id="Row_${newSubmission.studentId}_${newSubmission.assignmentId}">
                            <td>${newSubmission.studentName}</td>
                            <td>${newSubmission.assignmentTitle}</td>
                            <td>${newSubmission.dueDate}</td>
                            <td>${newSubmission.submissionDate}</td>
                            <td class="d-flex flex-column">
                                <button type="button" class="btn btn-danger mt-1 w-100 deleteSubmissionButton" data-student-id="${newSubmission.studentId}" data-assignment-id="${newSubmission.assignmentId}">Delete</button>
                            </td>
                        </tr>`
                );

                $('#addSubmissionForm')[0].reset();
            },
            error: function (xhr, status, error) {
                showToast("An error occurred while adding the submission!", false);
            }
        });
    });

    //Variables For Delete Confirmation
    var studentIdToDelete, assignmentIdToDelete;

    // Trigger the confirmation modal on delete button click
    $(document).on('click', '.deleteSubmissionButton', function () {
        studentIdToDelete = $(this).data('student-id');
        assignmentIdToDelete = $(this).data('assignment-id');

        // Open the confirmation modal
        $('#confirmDeleteModal').modal('show');
    });


    // Delete Submission
    $('#confirmDeleteButton').click(function () {
        // Proceed with deletion
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Delete", "StudentAssignment")',
            data: { studentId: studentIdToDelete, assignmentId: assignmentIdToDelete },
            success: function (response) {
                showToast("Submission deleted successfully!", true);
                $('#Row_' + studentIdToDelete + '_' + assignmentIdToDelete).remove(); // Remove the row from the table
                $('#confirmDeleteModal').modal('hide'); // Hide the confirmation modal
            },
            error: function (xhr, status, error) {
                showToast("An error occurred while deleting the submission.", false);
                $('#confirmDeleteModal').modal('hide'); // Hide the confirmation modal
            }
        });
    });

    // Filter and Search functionality
    $(document).ready(function () {
        var $rows = $('#assignmentsTable tbody tr');

        $('#searchButton').click(function () {
            var studentName = $('#filterStudentName').val().toLowerCase();
            var assignmentTitle = $('#filterAssignmentTitle').val().toLowerCase();

            $rows.show().filter(function () {
                var studentNameMatch = $(this).find('td:eq(0)').text().toLowerCase().indexOf(studentName) === -1;
                var assignmentTitleMatch = $(this).find('td:eq(1)').text().toLowerCase().indexOf(assignmentTitle) === -1;
                return studentNameMatch || assignmentTitleMatch;
            }).hide();
        });
    });
</script>